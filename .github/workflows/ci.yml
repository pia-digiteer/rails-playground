name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
  postgres:
    image: postgres:15
    env:
      POSTGRES_USER: ${{ secrets.PG_USERNAME }}
      POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
      POSTGRES_DB: ${{ secrets.PG_DATABASE_TEST }}
    ports:
      - 5432:5432
    options: >-
      --health-cmd "pg_isready -U ${{ secrets.PG_USERNAME }}"
      --health-interval 10s
      --health-timeout 5s
      --health-retries 5

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          PG_USERNAME: ${{ secrets.PG_USERNAME }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          PG_HOST: localhost
          PG_DATABASE_TEST: ${{ secrets.PG_DATABASE_TEST }}
          RAILS_ENV: test
        run: |
          # Wait a few seconds for Postgres to be ready
          until pg_isready -h $PG_HOST -U $PG_USERNAME; do
            echo "Waiting for Postgres..."
            sleep 2
          done
          # Prepare the test database
          bin/rails db:create db:migrate
          # Run all tests
          bin/rails test test test:system


      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
